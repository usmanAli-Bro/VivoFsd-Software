<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="mypictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="ColumnCODE.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="NAME.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CONTACT.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnSTATE.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnPINCODE.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnEmail.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="STNO.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CIN.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>